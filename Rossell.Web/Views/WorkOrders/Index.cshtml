@{   
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="content">
    @model IEnumerable<Rossell.BusinessEntity.WorkOrder>
    <div class="card">
        <form class="w-100 p-0" method="post" id="WorkOrderForm">
            <div class="input-group">
                <div class="alert font messagealert fixed-top" id="infoMessage" style="display: none;">
                    <button type="button" class="close">x</button>
                    <p></p>
                </div>
            </div>    
            
            <div class="card-header">
                Work Order List
            </div>
            <div class="card-body p-2">
                <div class="custom-button-list list-group" id="myList" role="tablist">
                    @foreach (var workOrder in Model)
                    {   
                    <span class="button-checkbox">
                        @if (workOrder.COLOR_CODE == 0)
                        {
                            <input type="hidden" value="@Html.DisplayFor(modelItem => workOrder.COLOR_CODE)" id="btn_@workOrder.WorkOrderID" />
                            <button type="button" class="list-group-item list-group-item-action mb-2 rounded" data-color="primary" id="btn_@workOrder.WorkOrderID" name="btn_@workOrder.WorkOrderID" value="@Html.DisplayFor(modelItem => workOrder.WorkOrderID)">
                                @Html.DisplayFor(modelItem => workOrder.WorkOrderID) - @Html.DisplayFor(modelItem => workOrder.ItemNo) - @Html.DisplayFor(modelItem => workOrder.StartDate)
                                @Html.CheckBox("chk", false, new { id = workOrder.WorkOrderID, style = "display: none" })

                            </button>
                        }

                        @if (workOrder.COLOR_CODE == 1)
                        {
                            <input type="hidden" value="@Html.DisplayFor(modelItem => workOrder.COLOR_CODE)" id="btn_@workOrder.WorkOrderID" />
                            <button type="button" class="list-group-item list-group-item-action mb-2 rounded" style="background-color:#e1de25 !important;" data-color="primary" id="btn_@workOrder.WorkOrderID" name="btn_@workOrder.WorkOrderID" value="@Html.DisplayFor(modelItem => workOrder.WorkOrderID)">
                                @Html.DisplayFor(modelItem => workOrder.WorkOrderID) - @Html.DisplayFor(modelItem => workOrder.ItemNo) - @Html.DisplayFor(modelItem => workOrder.StartDate)
                                @Html.CheckBox("chk", false, new { id = workOrder.WorkOrderID, style = "display: none" })
                            </button>
                        }

                        @if (workOrder.COLOR_CODE == -1)
                        {
                            <input type="hidden" value="@Html.DisplayFor(modelItem => workOrder.COLOR_CODE)" id="btn_@workOrder.WorkOrderID" />
                            <button type="button" class="list-group-item list-group-item-action mb-2 rounded" data-color="primary" style="background-color:#f0265d !important;" id="btn_@workOrder.WorkOrderID" name="btn_@workOrder.WorkOrderID" value="@Html.DisplayFor(modelItem => workOrder.WorkOrderID)">
                                @Html.DisplayFor(modelItem => workOrder.WorkOrderID) - @Html.DisplayFor(modelItem => workOrder.ItemNo) - @Html.DisplayFor(modelItem => workOrder.StartDate)
                                @Html.CheckBox("chk", false, new { id = workOrder.WorkOrderID, style = "display: none" })

                            </button>
                        }
                    </span>
                    }
                </div>
            </div>
            <div class="form-group d-flex justify-content-end mb-2 mr-2" id="bottomButton">
                <input type="submit" id="btnSubmit" name="btnSubmit" value="Next" class="btn btn-secondary btn-sm text-right" />
                <input type="button" id="btnBack" name="btnBack" value="Back" class="btn btn-secondary btn-sm text-right" style="display:none;" />
            </div>
        </form>
        <div class="spinner" style="display:none">
            <div class="center-div">
                <div class="inner-div">
                    <div class="loader"></div>
                </div>
            </div>
        </div>

        @if (@Model.Count() <= 0)
        {
            <script type="text/javascript">
                $('.spinner').css('display', 'none');
                $('#btnSubmit').css('display', 'none');
                $('#btnBack').css('display', 'block');
                $('#infoMessage').addClass('alert-danger');
                $('#infoMessage').text('No Work Order found on search.');
                $('#infoMessage').stop();
                $('#infoMessage').slideDown();
                $('#infoMessage').delay(3000).slideUp("slow");
            </script>
        }
    </div>
    <script type="text/javascript">
        //var btn = $('#btnSubmit');
        //$(window).scroll(function () {
        //    alert(1);
        //    if ($(window).scrollTop() > 20) {
        //        btn.addClass('show');
        //    } else {
        //        btn.removeClass('show');
        //    }
        //});
               
        $(document).ready(function () {

            if ($(".card-body").height() > $(window).height()) {              
                $("#bottomButton").addClass('fixed-bottom');
            }
            else {                
                $("#bottomButton").removeClass('fixed-bottom');
            }

            $('#btnBack').on('click', function () {            
            var url = '@Url.Action("Index", "FilterWorkOrder")';
            window.location.href = url;
            });

            $(function () {
                $(".close").on("click", function () {
                    $("#infoMessage").hide();                    
                });
            });

            $('.button-checkbox').each(function () {
                // Settings
                var $widget = $(this),
                    $button = $widget.find('button'),
                    $checkbox = $widget.find('input:checkbox'),
                    $hidden = $widget.find('input[type="hidden"][name="chk"]'),
                    color = $button.data('color'),
                    settings = {
                        on: {
                            icon: ' fa fa-check-circle mr-2'
                        },
                        off: {
                            icon: ' fa fa-check-circle mr-2 disabled'
                        }
                    };

                // Event Handlers
                $button.on('click', function () {
                    $checkbox.prop('checked', !$checkbox.is(':checked'));
                    $checkbox.triggerHandler('change');
                    updateDisplay();
                });
                $checkbox.on('change', function () {
                    //updateDisplay();
                });

                // Actions
                function updateDisplay() {
                    var isChecked = $checkbox.is(':checked');

                    // Set the button's state
                    $button.data('state', (isChecked) ? "on" : "off");

                    // Set the button's icon
                    $button.find('.state-icon')
                        .removeClass()
                        .addClass('state-icon ' + settings[$button.data('state')].icon);

                    // Update the button's color
                    if (isChecked) {                        
                        $button
                            .removeClass('btn-default')
                            .addClass('btn-' + color + ' active')
                            .removeAttr("style");
                            
                        $hidden.val($button.val());
                    }
                    else {
                        var val = $("#btn_" + $button.val()).val();
                        var styleCss;
                        if (val == 1) {
                            styleCss = 'background-color:#e1de25 !important;';
                        }
                        if (val == -1) {
                            styleCss = 'background-color:#f0265d !important;';
                        }
                        $button
                            .removeClass('btn-' + color + ' active')
                            .addClass('btn-default')
                            .attr('style', styleCss);
                        $hidden.val(0);
                    }
                }

                // Initialization
                function init() {

                    updateDisplay();

                    // Inject the icon if applicable
                    if ($button.find('.state-icon').length == 0) {
                        $button.prepend('<i class="state-icon' + settings[$button.data('state')].icon + '"></i> ');
                    }
                }
                init();
            });

            $.validator.setDefaults({
                submitHandler: function () {
                    var workOrdersArray = [];
                    $('.button-checkbox').each(function () {
                        var $widget = $(this),
                            $checkbox = $widget.find('input:checkbox'),
                            $hidden = $widget.find('input[type="hidden"][name="chk"]');
                        var isChecked = $checkbox.is(':checked');
                        if (isChecked) {
                            workOrdersArray.push($hidden.val());
                        }
                    });

                    $('.spinner').css('display', 'block');
                    $.ajax({
                        type: "POST",
                        url: "/WorkOrders/Next",
                        data: { workOrder: workOrdersArray, isCheckNonFGMulti : "true" },
                        cache: false,
                        success: function (response) {
                            if (response.status == 1) {
                                var url = '@Url.Action("Index", "Location")';
                                window.location.href = url;
                            }
                            else {
                                if (response.status == 0)
                                {
                                    $('.spinner').css('display', 'none');
                                    $('#infoMessage').addClass('alert-danger');
                                    $('#infoMessage').find('p').html(response.message);
                                    //$('#infoMessage').text('No items found to pick on selected WorkOrders');
                                    $('#infoMessage').stop();
                                    $('#infoMessage').slideDown();
                                    $('#infoMessage').delay(3000).slideUp("slow");
                                }
                                if (response.status == 2) {
                                    $('.spinner').css('display', 'none');
                                    $('#infoMessage').addClass('alert-danger');
                                    $('#infoMessage').find('p').html(response.message);
                                    //$('#infoMessage').text('Please select atleast one Work Order');
                                    $('#infoMessage').stop();
                                    $('#infoMessage').slideDown();
                                    $('#infoMessage').delay(3000).slideUp("slow");
                                }
                                if (response.status == 3) {
                                    $('.spinner').css('display', 'none');
                                    $('#infoMessage').show();
                                    $('#infoMessage').addClass('alert-danger');
                                    $('#infoMessage').find('p').after('<div class="input-group"><input type="button" id="btnContinue" name="btnContinue" value="Continue Anyway" class="btn btn-secondary btn-sm"></div>');
                                    $('#infoMessage').find('p').html(response.message);
                                    CallContinueButton(workOrdersArray);
                                    //$('#infoMessage').text('Please select atleast one Work Order');
                                    //$('#infoMessage').stop();
                                    //$('#infoMessage').slideDown();
                                    //$('#infoMessage').delay(5000).slideUp("slow");
                                }
                                if (response.status == -1) {
                                    $('.spinner').css('display', 'none');
                                    var url = '@Url.Action("Index", "Login")';
                                    window.location.href = url;
                                }
                            }
                        },
                        failure: function (response) {
                            //  alert(response.responseText);
                            $('.spinner').css('display', 'none');
                        },
                        error: function (response) {
                            //alert(response.responseText);
                            $('.spinner').css('display', 'none');
                        }
                    });
                }
            });

            

            $('#WorkOrderForm').validate({
                rules: {
                    "workOrdersArray[]": {
                        required: true,
                        minlength: 1
                    }
                },
                messages: {
                    "workOrdersArray[]": {
                        required: "Please select Work Order",
                        minlength: "Please select Work Order"
                    }
                },
                errorElement: 'span',
                errorPlacement: function (error, element) {
                    error.addClass('invalid-feedback');
                    element.closest('.input-group').append(error);
                },
                highlight: function (element, errorClass, validClass) {
                    $(element).addClass('is-invalid');
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).removeClass('is-invalid');
                }
            });
        });

        function CallContinueButton(workOrdersArray)
        {
            $('#btnContinue').on('click', function () {
                $('.spinner').css('display', 'block');
                    $.ajax({
                        type: "POST",
                        url: "/WorkOrders/Next",
                        data: { workOrder: workOrdersArray, isCheckNonFGMulti : "false" },
                        cache: false,
                        success: function (response) {
                            if (response.status == 1) {
                                var url = '@Url.Action("Index", "Location")';
                                window.location.href = url;
                            }
                            else {
                                if (response.status == 0)
                                {
                                    $('.spinner').css('display', 'none');
                                    $('#infoMessage').addClass('alert-danger');
                                    $('#infoMessage').find('p').html(response.message);
                                    //$('#infoMessage').text('No items found to pick on selected WorkOrders');
                                    $('#infoMessage').stop();
                                    $('#infoMessage').slideDown();
                                    $('#infoMessage').delay(3000).slideUp("slow");
                                }
                                if (response.status == 2) {
                                    $('.spinner').css('display', 'none');
                                    $('#infoMessage').addClass('alert-danger');
                                    $('#infoMessage').find('p').html(response.message);
                                    //$('#infoMessage').text('Please select atleast one Work Order');
                                    $('#infoMessage').stop();
                                    $('#infoMessage').slideDown();
                                    $('#infoMessage').delay(3000).slideUp("slow");
                                }
                                if (response.status == 3) {
                                    $('.spinner').css('display', 'none');
                                    $('#infoMessage').show();
                                    $('#infoMessage').addClass('alert-danger');

                                    

                                    $('#infoMessage').find('p').after('<div class="input-group"><input type="button" id="btnContinue" name="btnContinue" value="Continue Anyway" class="btn btn-secondary btn-sm"></div>');
                                    $('#infoMessage').find('p').html(response.message);
                                    //$('#infoMessage').text('Please select atleast one Work Order');
                                    //$('#infoMessage').stop();
                                    //$('#infoMessage').slideDown();
                                    //$('#infoMessage').delay(5000).slideUp("slow");
                                }
                                if (response.status == -1) {
                                    $('.spinner').css('display', 'none');
                                    var url = '@Url.Action("Index", "Login")';
                                    window.location.href = url;
                                }
                            }
                        },
                        failure: function (response) {
                            //  alert(response.responseText);
                            $('.spinner').css('display', 'none');
                        },
                        error: function (response) {
                            //alert(response.responseText);
                            $('.spinner').css('display', 'none');
                        }
                    });
            });
        }
    </script>
</section>

